
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Speakeasy
{
    using Speakeasy.Models.Shared;
    using Speakeasy.Utils;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading.Tasks;
    using System;

    /// <summary>
    /// The Speakeasy Bar: A bar that serves drinks.
    /// 
    /// <remarks>
    /// A secret underground bar that serves drinks to those in the know.
    /// </remarks>
    /// 
    /// <see>https://docs.speakeasy.bar} - The Speakeasy Bar Documentation.</see>
    /// </summary>
    public interface ISpeakeasySDK
    {

        /// <summary>
        /// The authentication endpoints.
        /// </summary>
        public IAuthenticationSDK Authentication { get; }
        public IConfigSDK Config { get; }

        /// <summary>
        /// The drinks endpoints.
        /// </summary>
        public IDrinksSDK Drinks { get; }

        /// <summary>
        /// The ingredients endpoints.
        /// </summary>
        public IIngredientsSDK Ingredients { get; }

        /// <summary>
        /// The orders endpoints.
        /// </summary>
        public IOrdersSDK Orders { get; }
    }
    
    public class SDKConfig
    {
    }

    /// <summary>
    /// The Speakeasy Bar: A bar that serves drinks.
    /// 
    /// <remarks>
    /// A secret underground bar that serves drinks to those in the know.
    /// </remarks>
    /// 
    /// <see>https://docs.speakeasy.bar} - The Speakeasy Bar Documentation.</see>
    /// </summary>
    public class SpeakeasySDK: ISpeakeasySDK
    {
        public SDKConfig Config { get; private set; }
        public static Dictionary<string, string> ServerList = new Dictionary<string, string>()
        {
            {"Serverprod", "https://speakeasy.bar" },
            {"Serverstaging", "https://staging.speakeasy.bar" },
            {"Servercustomer", "https://{organization}.{environment}.speakeasy.bar" },
        };

        private const string _language = "csharp";
        private const string _sdkVersion = "0.1.0";
        private const string _sdkGenVersion = "2.173.0";
        private const string _openapiDocVersion = "1.0.0";
        private const string _userAgent = "speakeasy-sdk/csharp 0.1.0 2.173.0 1.0.0 Speakeasy.Bar";
        private string _serverUrl = "";
        private ISpeakeasyHttpClient _defaultClient;
        private ISpeakeasyHttpClient _securityClient;
        public IAuthenticationSDK Authentication { get; private set; }
        public IConfigSDK Config { get; private set; }
        public IDrinksSDK Drinks { get; private set; }
        public IIngredientsSDK Ingredients { get; private set; }
        public IOrdersSDK Orders { get; private set; }

        public SpeakeasySDK(Security? security = null, string? serverUrl = null, ISpeakeasyHttpClient? client = null)
        {
            _serverUrl = serverUrl ?? SpeakeasySDK.ServerList["Serverprod"];

            _defaultClient = new SpeakeasyHttpClient(client);
            _securityClient = _defaultClient;
            
            if(security != null)
            {
                _securityClient = SecuritySerializer.Apply(_defaultClient, security);
            }
            
            Config = new SDKConfig()
            {
            };

            Authentication = new AuthenticationSDK(_defaultClient, _securityClient, _serverUrl, Config);
            Config = new ConfigSDK(_defaultClient, _securityClient, _serverUrl, Config);
            Drinks = new DrinksSDK(_defaultClient, _securityClient, _serverUrl, Config);
            Ingredients = new IngredientsSDK(_defaultClient, _securityClient, _serverUrl, Config);
            Orders = new OrdersSDK(_defaultClient, _securityClient, _serverUrl, Config);
        }
    }
}